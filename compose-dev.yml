version: '3.8'
x-airflow-common:
  &airflow-common
  build:
    context: ./containers/airflow/
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW_CONN_POSTGRES_DEFAULT: ${AIRFLOW_CONN_POSTGRES_DEFAULT}
    MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    MINIO_HOST: ${MINIO_HOST}
    MINIO_PORT: ${MINIO_PORT}
    MINIO_ENDPOINT: ${MINIO_ENDPOINT}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./tests:/opt/airflow/tests
    - ./src:/opt/airflow/src
    - ./utils:/opt/airflow/utils
    - ./database:/opt/airflow/database
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  depends_on:
    postgres:
        condition: service_healthy

services:
  airflow-webserver:
    <<: *airflow-common
    container_name: webserver
    command: webserver
    ports:
      - "8080:8080"
      - "8877:8877"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    mem_limit: 4gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7
  
  airflow-scheduler:
    <<: *airflow-common
    container_name: scheduler
    command: scheduler
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"'
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    mem_limit: 4gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: version
    mem_limit: 2gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}

  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - ./containers/airflow/postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      retries: 5
    restart: always
    mem_limit: 2gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7
    ports:
      - "5432:5432"
  
  minio:
    container_name: minio-data-lake
    image: minio/minio:RELEASE.2023-10-07T15-07-38Z
    restart: always
    mem_limit: 1gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7
    networks:
      - my-network
    ports:
      - "4144:4144"
      - "4145:4145"
    volumes:
      - ./containers/minio/storage:/data
    depends_on:
      - airflow-init
      - airflow-webserver
      - airflow-scheduler
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --address ":4144" --console-address ":4145" /data

  metabase:
    build:
      context: ./containers/metabase/
    container_name: metabase
    hostname: metabase
    mem_limit: 4gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${MB_DB_DBNAME}
      MB_DB_PORT: ${MB_DB_PORT}
      MB_DB_USER: ${MB_DB_USER}
      MB_DB_PASS: ${MB_DB_PASS}
      MB_DB_HOST: postgres-metabase
    networks:
      - my-network
    depends_on:
      - postgres-metabase
      - airflow-init
      - airflow-webserver
      - airflow-scheduler
    restart: always

  postgres-metabase:
    image: postgres:15.4
    container_name: postgres-metabase
    hostname: postgres-metabase
    mem_limit: 2gb
    cpu_count: ${CPU_COUNT}
    cpus: 0.7
    ports:
      - "5433:5433"
    environment:
      PGPORT: ${MB_DB_PORT}
      POSTGRES_DB: ${MB_DB_DBNAME}
      POSTGRES_USER: ${MB_DB_USER}
      POSTGRES_PASSWORD: ${MB_DB_PASS}
    volumes:
      - ./containers/metabase/postgresql_data:/var/lib/postgresql/data
    networks:
      - my-network
    depends_on:
      - airflow-init
      - airflow-webserver
      - airflow-scheduler
    restart: always
    
networks:
  my-network:
    driver: bridge

